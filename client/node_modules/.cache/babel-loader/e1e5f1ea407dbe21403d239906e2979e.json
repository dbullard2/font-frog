{"ast":null,"code":"var _jsxFileName = \"/home/daniel/stuff/font-frog/client/src/components/DisplayFont.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as opentype from \"opentype.js\";\nimport \"./index.css\";\n\nvar DisplayFont = function DisplayFont(_ref) {\n  var fontName = _ref.fontName;\n  var font = {\n    fontName: fontName\n  };\n  font = JSON.stringify(font);\n  font = font.slice(13, -2);\n  console.log(font);\n  opentype.load(font, function (err, font) {\n    if (err) {\n      console.log(\"font couldnt be loaded\");\n    } else {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n      var text = \"Woven silk pyjamas exchanged for blue quartz.\";\n      var test = document.getElementById(\"slider\").value;\n      font.draw(ctx, text, 0, 50, test);\n    }\n  });\n\n  var reloadFont = function reloadFont(e) {\n    opentype.load(font, function (err, font) {\n      if (err) {\n        console.log(\"font couldnt be loaded\");\n      } else {\n        var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n        var text = \"Woven silk pyjamas exchanged for blue quartz.\";\n        var test = document.getElementById(\"slider\").value;\n        font.draw(ctx, text, 0, 50, test);\n      }\n    });\n  };\n\n  var sliderVal = function sliderVal(e) {\n    document.getElementById(\"fontSize\").innerHTML = document.getElementById(\"slider\").value;\n    reloadFont(); //document.getElementById(\"canvas\").style.fontSize = document.getElementById(\"slider\").value;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    id: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"range\",\n    name: \"\",\n    id: \"slider\",\n    onChange: sliderVal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"fontSize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nDisplayFont.propTypes = {\n  fontName: PropTypes.string\n};\nexport default DisplayFont;","map":{"version":3,"sources":["/home/daniel/stuff/font-frog/client/src/components/DisplayFont.js"],"names":["React","PropTypes","opentype","DisplayFont","fontName","font","JSON","stringify","slice","console","log","load","err","ctx","clearRect","canvas","width","height","document","getElementById","getContext","text","test","value","draw","reloadFont","e","sliderVal","innerHTML","propTypes","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as opentype from \"opentype.js\";\nimport \"./index.css\";\n\nconst DisplayFont = ({ fontName }) => {\n  var font = { fontName };\n  font = JSON.stringify(font);\n  font = font.slice(13, -2);\n  console.log(font);\n  opentype.load(font, function(err, font) {\n    if (err) {\n      console.log(\"font couldnt be loaded\");\n    } else {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n      var text = \"Woven silk pyjamas exchanged for blue quartz.\";\n      var test = document.getElementById(\"slider\").value;\n      font.draw(ctx, text, 0, 50, test);\n    }\n  });\n\n  const reloadFont = e => {\n    opentype.load(font, function(err, font) {\n      if (err) {\n        console.log(\"font couldnt be loaded\");\n      } else {\n        var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n        var text = \"Woven silk pyjamas exchanged for blue quartz.\";\n        var test = document.getElementById(\"slider\").value;\n        font.draw(ctx, text, 0, 50, test);\n      }\n    });\n  };\n\n  const sliderVal = e => {\n    document.getElementById(\"fontSize\").innerHTML = document.getElementById(\"slider\").value;\n    reloadFont();\n    //document.getElementById(\"canvas\").style.fontSize = document.getElementById(\"slider\").value;\n  };\n\n  return (\n    <div>\n      <canvas id='canvas'></canvas>\n      <input type='range' name='' id='slider' onChange={sliderVal} />\n      <p id='fontSize'></p>\n    </div>\n  );\n};\n\nDisplayFont.propTypes = {\n  fontName: PropTypes.string\n};\n\nexport default DisplayFont;\n"]},"metadata":{},"sourceType":"module"}