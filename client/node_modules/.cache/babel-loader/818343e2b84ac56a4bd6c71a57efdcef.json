{"ast":null,"code":"var _jsxFileName = \"/home/daniel/stuff/font-frog/client/src/components/DisplayFont.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar DisplayFont = function DisplayFont(_ref) {\n  var fontName = _ref.fontName;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"alert alert-info alert-dismissible fade show\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, fontName, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"alert\",\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"\\xD7\"))));\n};\n\nDisplayFont.propTypes = {\n  fontName: PropTypes.string.isRequired\n};\nexport default DisplayFont;","map":{"version":3,"sources":["/home/daniel/stuff/font-frog/client/src/components/DisplayFont.js"],"names":["React","PropTypes","DisplayFont","fontName","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,8CAAf;AAA8D,IAAA,IAAI,EAAC,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAwC,oBAAa,OAArD;AAA6D,kBAAW,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,CADF,CADF;AAUD,CAXD;;AAaAD,WAAW,CAACE,SAAZ,GAAwB;AACtBD,EAAAA,QAAQ,EAAEF,SAAS,CAACI,MAAV,CAAiBC;AADL,CAAxB;AAIA,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst DisplayFont = ({ fontName }) => {\n  return (\n    <div>\n      <div className='alert alert-info alert-dismissible fade show' role='alert'>\n        {fontName}\n        <button type='button' className='close' data-dismiss='alert' aria-label='Close'>\n          <span aria-hidden='true'>&times;</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nDisplayFont.propTypes = {\n  fontName: PropTypes.string.isRequired\n};\n\nexport default DisplayFont;\n"]},"metadata":{},"sourceType":"module"}