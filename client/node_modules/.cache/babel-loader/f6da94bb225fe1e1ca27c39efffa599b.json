{"ast":null,"code":"import _regeneratorRuntime from \"/home/daniel/stuff/font-frog/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/daniel/stuff/font-frog/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/daniel/stuff/font-frog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/daniel/stuff/font-frog/client/src/components/FileUpload.js\";\n\nimport React, { Fragment, useState } from \"react\";\nimport DisplayFont from \"./DisplayFont\";\nimport axios from \"axios\";\nimport logo from \"../img/logo.svg\";\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragging = _useState2[0],\n      setDragging = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  var _useState5 = useState(\"Choose File\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filename = _useState6[0],\n      setFilename = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      uploadedFile = _useState8[0],\n      setUploadedFile = _useState8[1]; // eslint-disable-next-line\n\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var dropRef = React.createRef();\n  console.log(dropRef);\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  var alert2 = function alert2(e) {\n    var modal = document.getElementById(\"theModal\");\n    var span = document.getElementsByClassName(\"close\")[0];\n    modal.style.display = \"block\";\n\n    span.onclick = function () {\n      modal.style.display = \"none\";\n    };\n\n    window.onclick = function (event) {\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  };\n\n  var handleDrag = function handleDrag(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  var handleDragIn = function handleDragIn(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    _this.dragCounter++;\n\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      _this.setState({\n        dragging: true\n      });\n    }\n\n    var border = document.getElementById(\"drop\");\n    border.style.borderColor = \"#ff4cb4\";\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var formData, extensionList, extension, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append(\"file\", file);\n              extensionList = [\"ttf\", \"otf\", \"woff\", \"woff2\"];\n              extension = file.name.split(\".\").pop();\n\n              if (!(extensionList.includes(extension) === false)) {\n                _context.next = 9;\n                break;\n              }\n\n              alert2();\n              _context.next = 21;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return axios.post(\"/upload\", formData, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {}\n              });\n\n            case 12:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setUploadedFile({\n                fileName: fileName,\n                filePath: filePath\n              });\n              setMessage(\"File Uploaded\");\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](9);\n\n              if (_context.t0.response.status === 500) {\n                setMessage(\"There was a problem with the server\");\n              } else {\n                setMessage(_context.t0.response.data.msg);\n              }\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 18]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"drop-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    id: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Drag & drop your font file here!\"), React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Or upload your font manually\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal\",\n    id: \"theModal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\xD7\"), React.createElement(\"img\", {\n    src: logo,\n    alt: \"Font Frog Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Font Frog only accepts .ttf, .otf, .woff, & .woff2 files. Please upload a compatible file\"))), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, uploadedFile.fileName))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/daniel/stuff/font-frog/client/src/components/FileUpload.js"],"names":["React","Fragment","useState","DisplayFont","axios","FileUpload","dragging","setDragging","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","dropRef","createRef","console","log","onChange","e","target","files","name","alert2","modal","document","getElementById","span","getElementsByClassName","style","display","onclick","window","event","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","border","borderColor","onSubmit","formData","FormData","append","extensionList","extension","split","pop","includes","post","headers","onUploadProgress","progressEvent","res","data","fileName","filePath","response","status","msg","logo"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport DisplayFont from \"./DisplayFont\";\nimport axios from \"axios\";\nimport logo from \"../img/logo.svg\";\n\nconst FileUpload = () => {\n  const [dragging, setDragging] = useState(false);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({}); // eslint-disable-next-line\n  const [message, setMessage] = useState(\"\");\n  var dropRef = React.createRef();\n  console.log(dropRef);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const alert2 = e => {\n    const modal = document.getElementById(\"theModal\");\n    const span = document.getElementsByClassName(\"close\")[0];\n\n    modal.style.display = \"block\";\n\n    span.onclick = function() {\n      modal.style.display = \"none\";\n    };\n\n    window.onclick = function(event) {\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  };\n\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++;\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({ dragging: true });\n    }\n    var border = document.getElementById(\"drop\");\n    border.style.borderColor = \"#ff4cb4\";\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const extensionList = [\"ttf\", \"otf\", \"woff\", \"woff2\"];\n    const extension = file.name.split(\".\").pop();\n    if (extensionList.includes(extension) === false) {\n      alert2();\n    } else {\n      try {\n        const res = await axios.post(\"/upload\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          onUploadProgress: progressEvent => {\n            // Clear percentage\n          }\n        });\n\n        const { fileName, filePath } = res.data;\n\n        setUploadedFile({ fileName, filePath });\n\n        setMessage(\"File Uploaded\");\n      } catch (err) {\n        if (err.response.status === 500) {\n          setMessage(\"There was a problem with the server\");\n        } else {\n          setMessage(err.response.data.msg);\n        }\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className='drop-container'>\n        <form onSubmit={onSubmit} id='test'>\n          <h1>Drag & drop your font file here!</h1>\n          <div className='custom-file mb-4'>\n            <input type='file' className='custom-file-input' id='customFile' onChange={onChange} />\n            <label className='custom-file-label' htmlFor='customFile'>\n              Or upload your font manually\n            </label>\n          </div>\n\n          <hr />\n          <input type='submit' value='Upload' className='btn btn-primary btn-block mt-4' />\n        </form>\n      </div>\n\n      <div className='modal' id='theModal'>\n        <div className='modal-content'>\n          <span className='close'>&times;</span>\n          <img src={logo} alt='Font Frog Logo' />\n          <p>Font Frog only accepts .ttf, .otf, .woff, & .woff2 files. Please upload a compatible file</p>\n        </div>\n      </div>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}