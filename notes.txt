- might need this - <DisplayFont fontName={filename} />
- v2 of above line - <DisplayFont fontName={uploadedFile.filePath} />. goes after the form in fileupload.js
- font frog logo in navbar should be  right clickable w/ custom context menu w/ login option, taking me to a login screen (firebase authorisation) that allows me to check off items from the feedback page
- create modal for when user trys to upload without choosing file
- fix site for different screen sizes / browsers
- when a valid file is uploaded, hide FileUpload component and display DisplayFont

// file upload backup ####################################

import React, { Fragment, useState } from "react";
import Message from "./Message";
import Progress from "./Progress";
import DisplayFont from "./DisplayFont";
import axios from "axios";

const FileUpload = () => {
  const [file, setFile] = useState("");
  const [filename, setFilename] = useState("Choose File");
  const [uploadedFile, setUploadedFile] = useState({});
  const [message, setMessage] = useState("");
  const [uploadPercentage, setUploadPercentage] = useState(0);

  const onChange = e => {
    setFile(e.target.files[0]);
    setFilename(e.target.files[0].name);
  };

  const onSubmit = async e => {
    e.preventDefault();
    const formData = new FormData();
    formData.append("file", file);

    try {
      const res = await axios.post("/upload", formData, {
        headers: {
          "Content-Type": "multipart/form-data"
        },
        onUploadProgress: progressEvent => {
          setUploadPercentage(parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total)));

          // Clear percentage
          setTimeout(() => setUploadPercentage(0), 10000);
        }
      });

      const { fileName, filePath } = res.data;

      setUploadedFile({ fileName, filePath });

      setMessage("File Uploaded");
      //document.getElementById("test").append(<DisplayFont fontName={filename} />);
    } catch (err) {
      if (err.response.status === 500) {
        setMessage("There was a problem with the server");
      } else {
        setMessage(err.response.data.msg);
      }
    }
  };

  return (
    <Fragment>
      {message ? <Message msg={message} /> : null}
      <form onSubmit={onSubmit} id='test'>
        <div className='custom-file mb-4'>
          <input type='file' className='custom-file-input' id='customFile' onChange={onChange} />
          <label className='custom-file-label' htmlFor='customFile'>
            {filename}
          </label>
        </div>

        <Progress percentage={uploadPercentage} />
        <DisplayFont fontName={uploadedFile.filePath} />

        <input type='submit' value='Upload' className='btn btn-primary btn-block mt-4' />
      </form>
      {uploadedFile ? (
        <div className='row mt-5'>
          <div className='col-md-6 m-auto'>
            <h3 className='text-center'>{uploadedFile.fileName}</h3>
          </div>
        </div>
      ) : null}
    </Fragment>
  );
};

export default FileUpload;
